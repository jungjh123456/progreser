[{"/Users/apple/Desktop/progreser/src/index.js":"1","/Users/apple/Desktop/progreser/src/reportWebVitals.js":"2","/Users/apple/Desktop/progreser/src/App.js":"3","/Users/apple/Desktop/progreser/src/modules/root.js":"4","/Users/apple/Desktop/progreser/src/components/Signup.jsx":"5","/Users/apple/Desktop/progreser/src/components/Routine.jsx":"6","/Users/apple/Desktop/progreser/src/modules/userSign.js":"7","/Users/apple/Desktop/progreser/src/modules/user.js":"8","/Users/apple/Desktop/progreser/src/modules/services/AuthService.js":"9","/Users/apple/Desktop/progreser/src/components/Login.jsx":"10","/Users/apple/Desktop/progreser/src/containers/SignContainer.jsx":"11","/Users/apple/Desktop/progreser/src/containers/LoginContainer.jsx":"12","/Users/apple/Desktop/progreser/src/components/NewRoutine.jsx":"13","/Users/apple/Desktop/progreser/src/containers/NewRoutineContainer.jsx":"14","/Users/apple/Desktop/progreser/src/modules/newRoutine.js":"15","/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/MyModal.jsx":"16","/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/components/Modalloaders.jsx":"17","/Users/apple/Desktop/progreser/src/modules/getRoutine.js":"18","/Users/apple/Desktop/progreser/src/containers/RoutineContainer.jsx":"19","/Users/apple/Desktop/progreser/src/modules/logout.js":"20","/Users/apple/Desktop/progreser/src/utils.js":"21","/Users/apple/Desktop/progreser/src/ModalPortal/Modal.js":"22","/Users/apple/Desktop/progreser/src/containers/MobxRoutineContainer.jsx":"23","/Users/apple/Desktop/progreser/src/mobx/RoutineStore.js":"24","/Users/apple/Desktop/progreser/src/containers/MobxnewRoutineContainer.jsx":"25"},{"size":603,"mtime":1611393017273,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1610348284098,"results":"28","hashOfConfig":"27"},{"size":2472,"mtime":1611413715217,"results":"29","hashOfConfig":"27"},{"size":915,"mtime":1611393017275,"results":"30","hashOfConfig":"27"},{"size":5399,"mtime":1611393017268,"results":"31","hashOfConfig":"27"},{"size":4911,"mtime":1611403928414,"results":"32","hashOfConfig":"27"},{"size":1686,"mtime":1611393017279,"results":"33","hashOfConfig":"27"},{"size":1652,"mtime":1611393017278,"results":"34","hashOfConfig":"27"},{"size":209,"mtime":1611393017276,"results":"35","hashOfConfig":"27"},{"size":1112,"mtime":1611398048562,"results":"36","hashOfConfig":"27"},{"size":358,"mtime":1611398061028,"results":"37","hashOfConfig":"27"},{"size":414,"mtime":1611398075341,"results":"38","hashOfConfig":"27"},{"size":4091,"mtime":1611407298220,"results":"39","hashOfConfig":"27"},{"size":638,"mtime":1611413728139,"results":"40","hashOfConfig":"27"},{"size":1421,"mtime":1611393017275,"results":"41","hashOfConfig":"27"},{"size":464,"mtime":1611393017263,"results":"42","hashOfConfig":"27"},{"size":207,"mtime":1611393017264,"results":"43","hashOfConfig":"27"},{"size":3366,"mtime":1611393017274,"results":"44","hashOfConfig":"27"},{"size":1159,"mtime":1611413704565,"results":"45","hashOfConfig":"27"},{"size":631,"mtime":1611393017275,"results":"46","hashOfConfig":"27"},{"size":122,"mtime":1611240882385,"results":"47","hashOfConfig":"48"},{"size":157,"mtime":1611393017263,"results":"49","hashOfConfig":"27"},{"size":0,"mtime":1611404347295,"results":"50","hashOfConfig":"27"},{"size":222,"mtime":1611411251960,"results":"51","hashOfConfig":"27"},{"size":1263,"mtime":1611464317306,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"1vhjv5a",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rt3g2u",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Desktop/progreser/src/index.js",["113","114","115","116"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport MyModal from './ModalPortal/MyModal/MyModal';\nconst history = createBrowserHistory();\n// // import { createStore } from 'redux';\n// import { Provider } from 'react-redux';\n// const store = createStore();\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n",["117","118"],"/Users/apple/Desktop/progreser/src/reportWebVitals.js",[],"/Users/apple/Desktop/progreser/src/App.js",["119","120"],"import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer, rootSaga } from './modules/root';\nimport LoginContainer from './containers/LoginContainer';\nimport { ConnectedRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport SignContainer from './containers/SignContainer';\nimport NewRoutineContainer from './containers/NewRoutineContainer';\nimport storage from 'redux-persist/lib/storage';\nimport persistReducer from '../node_modules/redux-persist/es/persistReducer';\nimport persistStore from '../node_modules/redux-persist/es/persistStore';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport MyModal from './ModalPortal/MyModal/MyModal';\nimport RoutineContainer from './containers/MobxRoutineContainer';\nimport { Provider as MoxProvider } from 'mobx-react';\nimport RoutineStore from './mobx/RoutineStore';\nimport MobxnewRoutineContainer from './containers/MobxnewRoutineContainer';\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['userInfo', 'signinfo', 'newRoutine', 'getRoutine'],\n};\nconst enhancedReducer = persistReducer(persistConfig, rootReducer(history));\nconst RoutineStores = new RoutineStore();\nconst store = createStore(\n  enhancedReducer,\n  composeWithDevTools(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n);\nsagaMiddleware.run(rootSaga);\n\nconst persistor = persistStore(store);\n\nfunction App() {\n  return (\n    <MoxProvider RoutineStore={RoutineStores}>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <div className=\"App\">\n            <ConnectedRouter history={history}>\n              <Switch>\n                <Route path=\"/login\" component={LoginContainer} />\n                <Route path=\"/newroutine\" component={MobxnewRoutineContainer} />\n                <Route path=\"/signup\" component={SignContainer} />\n                <Route path=\"/\" exact component={RoutineContainer} />\n              </Switch>\n            </ConnectedRouter>\n          </div>\n          {/* <MyModal /> */}\n        </PersistGate>\n      </Provider>\n    </MoxProvider>\n  );\n}\n\nexport default App;\n","/Users/apple/Desktop/progreser/src/modules/root.js",["121"],"import { all } from 'redux-saga/effects';\nimport { combineReducers } from 'redux';\nimport userInfo, { userSaga } from './user';\nimport { connectRouter } from 'connected-react-router';\nimport signinfo, { signupSaga } from './userSign';\nimport { reducer as formReducer } from 'redux-form';\nimport routine, {\n  watchGetRoutineSaga,\n  watchEditRoutineSaga,\n  watchNewRoutineSaga,\n  watchRemoveRoutineSaga,\n} from './getRoutine';\nimport { LogoutRoutineSaga } from './logout';\n\nexport const rootReducer = history =>\n  combineReducers({\n    userInfo,\n    signinfo,\n    routine,\n    router: connectRouter(history),\n  });\n\n// 사가 합치기\nexport function* rootSaga() {\n  yield all([\n    userSaga(),\n    signupSaga(),\n    watchNewRoutineSaga(),\n    watchRemoveRoutineSaga(),\n    watchEditRoutineSaga(),\n    watchGetRoutineSaga(),\n    watchRemoveRoutineSaga(),\n    watchEditRoutineSaga(),\n    LogoutRoutineSaga(),\n  ]);\n}\n","/Users/apple/Desktop/progreser/src/components/Signup.jsx",["122","123","124"],"import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Modal from '../ModalPortal/Modal';\nimport MyModal from '../ModalPortal/MyModal/MyModal';\nimport userService from '../modules/services/AuthService';\nimport './Signup.scss';\n\nexport default function Signup({ onSign }) {\n  const id = useRef();\n  const pass = useRef();\n  const repass = useRef();\n  const name = useRef();\n  const failid = useRef();\n  const birthday = useRef();\n  const formData = useRef();\n  const [visible, setVisible] = useState(false);\n  const show = () => setVisible(true);\n  const hide = () => setVisible(false);\n\n  console.log(visible);\n  const [checked, setChecked] = useState({\n    check: false,\n    ok: false,\n    email: false,\n    pass: false,\n  });\n  const [btn, setBtn] = useState(false);\n\n  const Submit = useCallback(\n    e => {\n      e.preventDefault();\n      const obj = {};\n      const formData = new FormData(e.target);\n      for (let [key, value] of formData.entries()) {\n        obj[key] = value;\n      }\n      console.log(obj);\n      onSign(obj);\n    },\n    [onSign],\n  );\n  const click = async e => {\n    e.preventDefault();\n    show();\n    const userId = await userService.getUser(id.current.value);\n    console.log(id.current.value);\n    console.log(checked);\n    if (userId.length) {\n      setChecked({ ...checked, check: true });\n      id.current.style = 'border-color: red;';\n    } else {\n      setChecked({ ...checked, ok: true });\n      id.current.style = 'border-color: blue;';\n    }\n    // console.log(checked);\n  };\n  const passChange = useCallback(() => {\n    if (pass.current.value === repass.current.value) {\n      setChecked({ ...checked, pass: false });\n      repass.current.style = 'border-color: blue;';\n      pass.current.style = 'border-color: blue;';\n    } else {\n      setChecked({ ...checked, pass: true });\n      pass.current.style = 'border-color: red;';\n      repass.current.style = 'border-color: red;';\n    }\n  }, [checked]);\n  const isEmail = useCallback(asValue => {\n    let regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n\n    return regExp.test(asValue); // 형식에 맞는 경우 true 리턴\n  }, []);\n  const emailChange = useCallback(() => {\n    if (isEmail(id.current.value)) {\n      setChecked({ ...checked, email: false });\n    } else {\n      setChecked({ ...checked, email: true });\n    }\n  }, [checked, isEmail]);\n\n  const checkInput = () => {\n    if (\n      id.current.value !== '' &&\n      pass.current.value !== '' &&\n      repass.current.value !== '' &&\n      name.current.value !== '' &&\n      birthday.current.maxLength !== +birthday.current.value\n    ) {\n      setBtn(true);\n    } else {\n      setBtn(false);\n    }\n  };\n  return (\n    <div className=\"Signup\">\n      <h1>만나서 반가워요!</h1>\n      <p>알찬 하루를 보낼 준비가 됐나요?</p>\n      <form onSubmit={Submit} ref={formData} onChange={checkInput}>\n        <div>\n          <label htmlFor=\"user-id\" ref={failid}>\n            이메일 * <span>{checked.check && '아이디가 중복되었습니다.'}</span>\n            <span\n              style={{\n                color: 'blue',\n              }}\n            >\n              {checked.ok && '이 아이디를 사용할 수 있습니다.'}\n            </span>\n            <span>{checked.email && '이메일 형식이 아닙니다.'}</span>\n          </label>\n          <input type=\"email\" onChange={emailChange} required name=\"user-id\" ref={id} />\n          {visible && (\n            <Modal>\n              <MyModal visible={visible} onClick={hide} />\n            </Modal>\n          )}\n          <button onClick={click}>중복 확인</button>\n        </div>\n        <div>\n          <label htmlFor=\"user-pass\">비밀번호 *</label>\n          <input type=\"password\" required name=\"user-pass\" ref={pass} />\n        </div>\n        <div>\n          <label htmlFor=\"user-repass\">비밀번호 *</label>\n          <input type=\"password\" required name=\"user-repass\" onChange={passChange} ref={repass} />\n          <span className=\"user-pass\">{checked.pass && '비밀번호가 다릅니다.'}</span>\n        </div>\n        <div>\n          <label htmlFor=\"user-name\">이름 *</label>\n          <input type=\"text\" required name=\"user-name\" ref={name} />\n        </div>\n        <div>\n          <label>성별</label>\n          <ul className=\"gender-list\">\n            <li>남</li>\n            <li>녀</li>\n          </ul>\n        </div>\n        <div>\n          <label htmlFor=\"user-birth\">생년월일</label>\n          <input\n            type=\"text\"\n            maxLength=\"6\"\n            placeholder=\"ex)950812\"\n            required\n            ref={birthday}\n            name=\"user-birth\"\n          />\n        </div>\n        <div class=\"check-div\">\n          <input type=\"checkbox\" name=\"user-ok\" />\n          <span>마이루틴의 이용약관과 개인정 취급방식에 동의합니다.</span>\n        </div>\n        {btn ? (\n          <button\n            type=\"submit\"\n            style={{\n              cursor: 'pointer',\n            }}\n          >\n            하루 관리 시작하기\n          </button>\n        ) : (\n          <button\n            type=\"submit\"\n            disabled\n            style={{\n              cursor: 'not-allowed',\n            }}\n          >\n            하루 관리 시작하기\n          </button>\n        )}\n      </form>\n    </div>\n  );\n}\n","/Users/apple/Desktop/progreser/src/components/Routine.jsx",["125","126","127","128"],"/Users/apple/Desktop/progreser/src/modules/userSign.js",[],"/Users/apple/Desktop/progreser/src/modules/user.js",[],"/Users/apple/Desktop/progreser/src/modules/services/AuthService.js",[],"/Users/apple/Desktop/progreser/src/components/Login.jsx",[],"/Users/apple/Desktop/progreser/src/containers/SignContainer.jsx",[],"/Users/apple/Desktop/progreser/src/containers/LoginContainer.jsx",[],"/Users/apple/Desktop/progreser/src/components/NewRoutine.jsx",["129","130"],"import React, { useCallback, useRef, useState } from 'react';\nimport './NewRoutine.scss';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Checkbox, Switch, Select, TimePicker } from 'antd';\nimport { IoIosArrowRoundForward } from 'react-icons/io';\nimport date from 'date-and-time';\n\nconst NewRoutine = ({ onRoutine, history, addMobRoutine }) => {\n  const form = useRef();\n  const audio = useRef();\n  console.log(addMobRoutine);\n  const [alarm, setAlarm] = useState('');\n\n  let message = '1번 울리기';\n  //const [state, setState] = useState(message);\n\n  const format = 'HH:mm';\n\n  const options = [\n    { label: '일', value: '일' },\n    { label: '월', value: '월' },\n    { label: '화', value: '화' },\n    { label: '수', value: '수' },\n    { label: '목', value: '목' },\n    { label: '금', value: '금' },\n    { label: '토', value: '토' },\n  ];\n\n  const onAlarmChange = alarm => {\n    setAlarm(alarm);\n    audio.current.src = `./audio/${alarm}.mp3`;\n    audio.current.play();\n  };\n\n  const onFinish = useCallback(\n    values => {\n      for (const key in values) {\n        if (key === 'alarmSound' && values[key] === undefined) values[key] = 'none';\n        if (key === 'day' && values[key] === undefined) values[key] = [];\n        values[key] = values[key] === undefined ? false : values[key];\n      }\n      const id = new Date().getTime();\n\n      let getValues = values;\n\n      getValues = {\n        id,\n        ...values,\n        startTime: date.format(getValues.startTime._d, 'hh:mm'),\n        endTime: date.format(getValues.endTime._d, 'hh:mm'),\n      };\n      addMobRoutine(getValues);\n    },\n    [addMobRoutine],\n  );\n  const cancelBtn = () => {\n    history.push('/');\n  };\n\n  return (\n    <div className=\"NewRoutine\">\n      <h1>\n        + New <br /> Routine\n      </h1>\n      <Form onFinish={onFinish} ref={form}>\n        <Form.Item name=\"routine\">\n          <Input placeholder=\"새 루틴을 추가해주세요\" />\n        </Form.Item>\n        <Form.Item name=\"day\">\n          <Checkbox.Group options={options} />\n        </Form.Item>\n\n        <h2>시작 알림</h2>\n        <div className=\"theme\">\n          <div className=\"toggle\">\n            <div className=\"active\">활성화</div>\n            <Form.Item name=\"alram\">\n              <Switch />\n            </Form.Item>\n          </div>\n        </div>\n        <div className=\"theme\">\n          <div className=\"time\">시간</div>\n          <Form.Item name=\"startTime\">\n            <TimePicker placeholder=\"Start Time\" format={format} />\n          </Form.Item>\n          <IoIosArrowRoundForward />\n          <Form.Item name=\"endTime\">\n            <TimePicker placeholder=\"End Time\" format={format} />\n          </Form.Item>\n        </div>\n        <div className=\"theme\">\n          <div className=\"frequency\">빈도</div>\n          <span>\n            <Form.Item name=\"frequency\">\n              <Select defaultValue=\"1번 울리기\">\n                <Select value=\"1번 울리기\">1번 울리기</Select>\n                <Select value=\"1분단위로 3번 울리기\">1분단위로 3번 울리기</Select>\n                <Select value=\"5분 간격 3번 울리기\">5분 간격 3번 울리기</Select>\n              </Select>\n            </Form.Item>\n          </span>\n        </div>\n        <h2>타이머 종료 알림</h2>\n        <div className=\"alarm\">\n          <Form.Item name=\"alarmSound\">\n            <Select defaultValue=\"알람 없음\" onChange={onAlarmChange}>\n              <Select value=\"none\">알람 없음</Select>\n              <Select value=\"bell\">벨 소리</Select>\n              <Select value=\"knock\">노크 소리</Select>\n            </Select>\n          </Form.Item>\n        </div>\n        <div className=\"button-wrap\">\n          <button className=\"button\" onClick={cancelBtn} type=\"reset\">\n            취소\n          </button>\n          <button className=\"button\" type=\"submit\">\n            완료\n          </button>\n        </div>\n      </Form>\n      <audio controls ref={audio} autoplay>\n        <source src=\"\" type=\"audio/mp3\" />\n      </audio>\n    </div>\n  );\n};\n\nexport default NewRoutine;\n","/Users/apple/Desktop/progreser/src/containers/NewRoutineContainer.jsx",[],"/Users/apple/Desktop/progreser/src/modules/newRoutine.js",[],["131","132"],"/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/MyModal.jsx",["133"],"import React, { useState } from 'react';\nimport Modalloaders from './components/Modalloaders';\nimport './MyModal.scss';\n\nconst MyModal = props => {\n  console.log(props);\n\n  const visible = () => {\n    props.onClick();\n  };\n  return (\n    <div className=\"modal\">\n      <div>\n        <Modalloaders />\n        <span>아이디가 중복 되었습니다.</span>\n        <button onClick={visible}>닫기</button>\n      </div>\n    </div>\n  );\n};\n\nexport default MyModal;\n","/Users/apple/Desktop/progreser/src/ModalPortal/MyModal/components/Modalloaders.jsx",[],"/Users/apple/Desktop/progreser/src/modules/getRoutine.js",["134"],"import { createAction, handleActions } from 'redux-actions';\nimport axios from '../../node_modules/axios/index';\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\n\nconst GETNEW = 'routine/NEW';\nconst GETSTART = 'getRoutine/START';\nconst GETSUCCESS = 'getRoutine/SUCCESS';\nconst GETFAIL = 'getRoutine/FAIL';\nconst GETREMOVE = 'getRoutine/REMOVE';\nconst GETLOGOUT = 'getLogout/LOGOUT';\nconst GETEDIT = 'getRoutine/EDIT';\nconst GETADD = 'getRoutine/ADD';\n\nexport const newStart = createAction(GETNEW, routine => routine);\nexport const getStart = createAction(GETSTART);\nconst getSuccess = createAction(GETSUCCESS, routine => routine);\nconst getfail = createAction(GETFAIL);\nexport const getRemove = createAction(GETREMOVE, routineId => routineId);\nexport const getEdit = createAction(GETEDIT, (routineId, routineText) => ({\n  routineId,\n  routineText,\n}));\nexport const getLogout = createAction(GETLOGOUT);\n\n// 리듀서함수제작\nconst routine = handleActions(\n  {\n    [GETSTART]: state => state,\n    [GETNEW]: state => state,\n    [GETREMOVE]: state => state,\n    [GETEDIT]: state => state,\n    [GETSUCCESS]: (state, { payload }) => payload,\n    [GETFAIL]: state => state,\n    [GETLOGOUT]: state => (state = []),\n  },\n  [],\n);\n\nexport default routine;\n\nfunction* getRoutineSaga() {\n  try {\n    const { id } = JSON.parse(localStorage.getItem('token'));\n    const res = yield call(axios.get, `/users/${id}`);\n    yield put(getSuccess(res.data.routines));\n  } catch (error) {\n    console.log(error);\n    yield put(getfail(error));\n  }\n}\n\nfunction* editRoutineSaga({ payload: { routineId, routineText } }) {\n  try {\n    const { id } = JSON.parse(localStorage.getItem('token'));\n    const prevState = yield select(state => state.routine);\n    const newState = prevState.map(routine => {\n      return routineId === routine.id ? { ...routine, routine: routineText } : routine;\n    });\n    yield call(axios.patch, `/users/${id}`, { routines: newState });\n    yield put(getSuccess(newState));\n  } catch (error) {\n    console.log(error);\n    yield put(getfail(error));\n  }\n}\n\nfunction* removeRoutineSaga({ payload: routineId }) {\n  try {\n    const { id } = JSON.parse(localStorage.getItem('token'));\n    const prevState = yield select(state => state.routine);\n    const newState = prevState.filter(routine => routine.id !== routineId);\n    yield call(axios.patch, `/users/${id}`, { routines: newState });\n    yield put(getSuccess(newState));\n  } catch (error) {\n    console.log(error);\n    yield put(getfail(error));\n  }\n}\n\nfunction* newRoutineSaga({ payload }) {\n  try {\n    const { id } = JSON.parse(localStorage.getItem('token'));\n    const prevState = yield select(state => state.routine);\n    const newState = [...prevState, payload];\n    yield call(axios.patch, `/users/${id}`, { routines: newState });\n    yield put(getSuccess(newState));\n    yield put(push('/'));\n  } catch (error) {\n    console.log(error);\n    yield put(getfail(error));\n  }\n}\n\nexport function* watchGetRoutineSaga() {\n  yield takeEvery(GETSTART, getRoutineSaga);\n}\nexport function* watchRemoveRoutineSaga() {\n  yield takeEvery(GETREMOVE, removeRoutineSaga);\n}\nexport function* watchEditRoutineSaga() {\n  yield takeEvery(GETEDIT, editRoutineSaga);\n}\nexport function* watchNewRoutineSaga() {\n  yield takeEvery(GETNEW, newRoutineSaga);\n}\n","/Users/apple/Desktop/progreser/src/containers/RoutineContainer.jsx",[],"/Users/apple/Desktop/progreser/src/modules/logout.js",[],"/Users/apple/Desktop/progreser/src/utils.js",[],"/Users/apple/Desktop/progreser/src/ModalPortal/Modal.js",[],"/Users/apple/Desktop/progreser/src/containers/MobxRoutineContainer.jsx",[],"/Users/apple/Desktop/progreser/src/mobx/RoutineStore.js",["135"],"const { observable, makeObservable, action } = require('mobx');\n\nclass RoutineStore {\n  @observable routines = [];\n\n  @action addRoutine = routine => {\n    this.routines.push(routine);\n  };\n}\n\nexport default RoutineStore;\n","/Users/apple/Desktop/progreser/src/containers/MobxnewRoutineContainer.jsx",[],{"ruleId":"136","severity":1,"message":"137","line":6,"column":10,"nodeType":"138","messageId":"139","endLine":6,"endColumn":23},{"ruleId":"136","severity":1,"message":"140","line":7,"column":10,"nodeType":"138","messageId":"139","endLine":7,"endColumn":25},{"ruleId":"136","severity":1,"message":"141","line":9,"column":8,"nodeType":"138","messageId":"139","endLine":9,"endColumn":15},{"ruleId":"136","severity":1,"message":"142","line":10,"column":7,"nodeType":"138","messageId":"139","endLine":10,"endColumn":14},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"136","severity":1,"message":"147","line":12,"column":8,"nodeType":"138","messageId":"139","endLine":12,"endColumn":27},{"ruleId":"136","severity":1,"message":"141","line":17,"column":8,"nodeType":"138","messageId":"139","endLine":17,"endColumn":15},{"ruleId":"136","severity":1,"message":"148","line":6,"column":21,"nodeType":"138","messageId":"139","endLine":6,"endColumn":32},{"ruleId":"136","severity":1,"message":"149","line":1,"column":30,"nodeType":"138","messageId":"139","endLine":1,"endColumn":39},{"ruleId":"150","severity":1,"message":"151","line":68,"column":35,"nodeType":"152","messageId":"153","endLine":68,"endColumn":36,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"151","line":68,"column":68,"nodeType":"152","messageId":"153","endLine":68,"endColumn":69,"suggestions":"155"},{"ruleId":"136","severity":1,"message":"156","line":11,"column":8,"nodeType":"138","messageId":"139","endLine":11,"endColumn":14},{"ruleId":"136","severity":1,"message":"157","line":12,"column":10,"nodeType":"138","messageId":"139","endLine":12,"endColumn":21},{"ruleId":"136","severity":1,"message":"158","line":99,"column":5,"nodeType":"138","messageId":"139","endLine":99,"endColumn":11},{"ruleId":"159","severity":1,"message":"160","line":130,"column":6,"nodeType":"161","endLine":130,"endColumn":8,"suggestions":"162"},{"ruleId":"136","severity":1,"message":"163","line":12,"column":10,"nodeType":"138","messageId":"139","endLine":12,"endColumn":15},{"ruleId":"136","severity":1,"message":"164","line":14,"column":7,"nodeType":"138","messageId":"139","endLine":14,"endColumn":14},{"ruleId":"143","replacedBy":"165"},{"ruleId":"145","replacedBy":"166"},{"ruleId":"136","severity":1,"message":"167","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"168","line":13,"column":7,"nodeType":"138","messageId":"139","endLine":13,"endColumn":13},{"ruleId":"136","severity":1,"message":"169","line":1,"column":21,"nodeType":"138","messageId":"139","endLine":1,"endColumn":35},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'ConnectedRouter' is defined but never used.","'MyModal' is defined but never used.","'history' is assigned a value but never used.","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'NewRoutineContainer' is defined but never used.","'formReducer' is defined but never used.","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["172","173"],["174","175"],"'moment' is defined but never used.","'useSelector' is defined but never used.","'timeId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRoutine'. Either include it or remove the dependency array. If 'getRoutine' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["176"],"'alarm' is assigned a value but never used.","'message' is assigned a value but never used.",["170"],["171"],"'useState' is defined but never used.","'GETADD' is assigned a value but never used.","'makeObservable' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"177","fix":"178","desc":"179"},{"messageId":"180","fix":"181","desc":"182"},{"messageId":"177","fix":"183","desc":"179"},{"messageId":"180","fix":"184","desc":"182"},{"desc":"185","fix":"186"},"removeEscape",{"range":"187","text":"188"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"189","text":"190"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"191","text":"188"},{"range":"192","text":"190"},"Update the dependencies array to be: [getRoutine]",{"range":"193","text":"194"},[2045,2046],"",[2045,2045],"\\",[2078,2079],[2078,2078],[3493,3495],"[getRoutine]"]